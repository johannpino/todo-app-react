{"version":3,"sources":["redux/store/index.js","redux/redurces/index.js","redux/actions/index.js","components/Navigation/index.js","components/Todo/index.js","components/TodoForm/index.js","components/index.js","serviceWorker.js","index.js"],"names":["initializers","todos","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread","concat","payload","filter","todo","id","window","__REDUX_DEVTOOLS_EXTENSION__","Navigation","react_default","a","createElement","className","this","props","title","Component","connect","Todo","handleDelete","confirm","_this","removeTodo","_this2","result","map","priority","description","responsible","key","onClick","bind","dispatch","value","TodoForm","handleSubmit","e","preventDefault","dato","target","focus","onAddTodo","reset","onSubmit","name","placeholder","add","App","components_Navigation","components_TodoForm","components_Todo","Boolean","location","hostname","match","ReactDOM","render","es","components","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24c4dc63.chunk.js","sourcesContent":["import {createStore} from 'redux'\r\nimport { reducer } from '../redurces';\r\nimport {todos} from './../../todos.json'\r\n\r\nconst initializers = {\r\n    todos\r\n}\r\n\r\nexport const store = createStore(reducer, initializers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\n","import { REMOVE_TODO, ADD_TODO } from \"../actions\";\r\n\r\n\r\nexport const reducer = (state = {},action) =>{\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            // console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                todos: state.todos.concat(action.payload)\r\n            }    \r\n            case REMOVE_TODO:\r\n            // console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter((todo, id) => {\r\n                    return id !== action.payload\r\n                } )\r\n            }  \r\n        default:\r\n        return state\r\n    }\r\n}","export const REMOVE_TODO = 'REMOVE_TODO'\r\nexport const ADD_TODO = 'ADD_TODO'\r\n\r\n\r\nexport const addTodo = payload => {\r\n    return {\r\n        type: ADD_TODO,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const removeTodo = payload => {\r\n    return {\r\n        type: REMOVE_TODO,\r\n        payload\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-dark bg-dark\">\r\n                    <h2 className=\"text-white\" >{this.props.title}\r\n                    <span className=\"badge badge-pill badge-light ml-2\">\r\n                        {this.props.todos.length}\r\n                    </span>\r\n                    </h2>\r\n                    \r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n         todos: state.todos\r\n    }\r\n }\r\n \r\n\r\nexport default connect(mapStateToProps,null)(Navigation);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport { removeTodo } from '../../redux/actions';\r\n\r\nclass Todo extends Component {\r\n\r\n    \r\n    handleDelete = id => {\r\n        if(window.confirm('Are you sure you want to delete it?')){\r\n            this.props.removeTodo(id)\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        const result = this.props.todos.map((todo, id) =>{\r\n            const {title,priority,description,responsible} = todo\r\n            return(\r\n                <div className=\"col-md-4 col-sm-6 col-xs-12 mt-2 mb-5\"  key={id}>\r\n                    <div className=\"card text-center\" >\r\n                        <div className=\"card-header\">\r\n                            <h3>{title}</h3>\r\n                            <span className=\"badge badge-pill badge-danger ml-2\">\r\n                                { priority}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"card-body\" >\r\n                            <p>{ description}</p>\r\n                            <p><mark>{ responsible}</mark></p>\r\n                        </div>\r\n                        <div className=\"card-footer\" >\r\n                            <button className=\"btn btn-danger\" onClick={this.handleDelete.bind(this,id)} >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <div className=\"row mt-4\">\r\n                    {result}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTodo.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n         todos: state.todos\r\n    }    \r\n }\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n        removeTodo: value => dispatch(removeTodo(value))\r\n    }\r\n)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Todo);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {addTodo} from './../../redux/actions'\r\n\r\nclass TodoForm extends Component {\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()      \r\n        const dato = {\r\n            title: e.target.title.value,\r\n            description: e.target.description.value,\r\n            responsible: e.target.responsible.value,\r\n            priority: e.target.priority.value\r\n        }\r\n\r\n        if(e.target.title.value === ''){\r\n            e.target.title.focus()\r\n        }else if(e.target.responsible.value === ''){\r\n            e.target.responsible.focus()\r\n        }\r\n        else if(e.target.description.value === ''){\r\n            e.target.description.focus()\r\n        }\r\n        else{\r\n            this.props.onAddTodo(dato)\r\n            e.target.reset()\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h3>Formulario</h3>\r\n                    </div>\r\n                    <form className=\"card-body\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"Title\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" name=\"responsible\" className=\"form-control\" placeholder=\"Responsible\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" name=\"description\" className=\"form-control\" placeholder=\"Description\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control\" name=\"priority\">\r\n                                <option value=\"low\">\r\n                                    Low\r\n                                </option>\r\n                                <option value=\"medium\">\r\n                                    Medium\r\n                                </option>\r\n                                <option value=\"high\">\r\n                                    High\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Enviar\r\n                            </button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTodoForm.propTypes = {\r\n    onAddTodo: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => (\r\n    {\r\n         onAddTodo: add => dispatch(addTodo(add))\r\n    }\r\n)\r\n\r\nexport default connect(null,mapDispatchToProps)(TodoForm);","import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport Todo from './Todo'\r\nimport TodoForm from './TodoForm';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n           <Navigation title=\"Todo-App\"/>\r\n           <div className=\"d-inline-block col-md-4 col-sm-12\">\r\n                <TodoForm />\r\n           </div>\r\n           <div className=\"d-inline-block col-md-8 col-sm-12\">\r\n                <Todo/>\r\n           </div>\r\n           <div className=\"footer text-center\">\r\n                <p>Johann Pino --- Todo-App with React & Redux </p>\r\n            </div>     \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {store} from './redux/store'\nimport './index.css';\nimport App from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}