{"version":3,"sources":["components/Navigation/index.js","components/Todo/index.js","components/TodoForm/index.js","components/index.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","this","props","title","todoLenght","Component","Todo","handleDelete","i","window","confirm","_this","onRemoveTodo","_this2","todos","todo","map","description","priority","responsible","key","onClick","bind","TodoForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInput","e","_e$target","target","value","name","setState","defineProperty","handleSubmit","preventDefault","onAddTodo","state","console","log","onSubmit","type","onChange","placeholder","App","handleAddTodo","toConsumableArray","concat","handleRemoveTodo","index","filter","components_Navigation","length","components_TodoForm","components_Todo","Boolean","location","hostname","match","ReactDOM","render","components","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b6432d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-dark bg-dark\">\r\n                    <h2 className=\"text-white\" >{this.props.title}\r\n                    <span className=\"badge badge-pill badge-light ml-2\">\r\n                        {this.props.todoLenght}\r\n                    </span>\r\n                    </h2>\r\n                    \r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Todo extends Component {\r\n\r\n    \r\n    handleDelete = i => {\r\n        if(window.confirm('Are you sure you want to delete it?')){\r\n            this.props.onRemoveTodo(i)\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        // console.log(this.props.todo)\r\n        const todos = this.props.todo.map((todo, i) =>{\r\n            const {title,description,priority,responsible} = todo\r\n            return(\r\n                <div className=\"col-4 mt-2\"  key={i}>\r\n                    <div className=\"card text-center\" >\r\n                        <div className=\"card-header\">\r\n                            <h3>{title}</h3>\r\n                            <span className=\"badge badge-pill badge-danger ml-2\">\r\n                                {priority}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"card-body\" >\r\n                            <p>{description}</p>\r\n                            <p><mark>{responsible}</mark></p>\r\n                        </div>\r\n                        <div className=\"card-footer\" >\r\n                            <button className=\"btn btn-danger\" onClick={this.handleDelete.bind(this,i)} >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <div className=\"container\" >\r\n                    <div className=\"row mt-4\">\r\n                        {todos}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTodo.propTypes = {\r\n    todo: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nclass TodoForm extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            title: '',\r\n            responsible: '',\r\n            description: '',\r\n            priority: 'low'\r\n        }\r\n    }\r\n\r\n    handleInput = e => {\r\n        const { value, name } = e.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.onAddTodo(this.state)\r\n        console.log('enviando datos');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h3>Formulario</h3>\r\n                    </div>\r\n                    <form className=\"card-body\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" name=\"title\" onChange={this.handleInput} className=\"form-control\" placeholder=\"Title\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" name=\"responsible\" onChange={this.handleInput} className=\"form-control\" placeholder=\"Responsible\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" name=\"description\" onChange={this.handleInput} className=\"form-control\" placeholder=\"Description\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control\" name=\"priority\" onChange={this.handleInput}>\r\n                                <option value=\"low\">\r\n                                    Low\r\n                                </option>\r\n                                <option value=\"medium\">\r\n                                    Medium\r\n                                </option>\r\n                                <option value=\"high\">\r\n                                    High\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Enviar\r\n                            </button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTodoForm.propTypes = {\r\n\r\n};\r\n\r\nexport default TodoForm;","import React, { Component } from 'react';\r\nimport Navigation from './Navigation';\r\nimport {todos} from './../todos.json'\r\nimport Todo from './Todo'\r\nimport TodoForm from './TodoForm';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            todos\r\n        }\r\n\t}\r\n\t\r\n\thandleAddTodo = todo => {\r\n\t\tthis.setState({\r\n\t\t\ttodos: [...this.state.todos, todo]\r\n\t\t})\r\n\t}\r\n\r\n\thandleRemoveTodo = index => {\t\t\r\n        this.setState({\r\n            todos: this.state.todos.filter( (e,i) => {\r\n                return i !== index\r\n            } )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n               <Navigation title=\"Todo-App\" todoLenght={this.state.todos.length} />\r\n               <div className=\"d-inline-block col-4\">\r\n                \t<TodoForm onAddTodo={this.handleAddTodo} />\r\n               </div>\r\n               <div className=\"d-inline-block col-8\">\r\n                    <Todo todo={this.state.todos} onRemoveTodo={this.handleRemoveTodo} />\r\n               </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}